{"version":3,"file":"component---src-pages-life-tsx-9b26b67a84beccd10ff3.js","mappings":"2MA8GA,UAzEmD,SAAH,GAa7C,QAZFA,KAAIC,EAAAA,EACFC,KACEC,aAAgBC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAO,EAAPA,QAEjBC,EAAK,EAA1BC,kBAAqBD,MAAKE,EAAAA,EAC1BC,KAIEC,GAFiB,EADjBC,gBACEC,gBAEO,EAATF,WAIH,GAAwCG,EAAAA,EAAAA,UAAS,OAA1CC,EAAgB,KAAEC,EAAW,KAK9BC,EAAUC,EAAAA,EAAAA,KAEVC,GAAmBC,EAAAA,EAAAA,UACvB,kBACEb,EAAMc,QACJ,SACEC,EAA2C,GAc3C,OAX6B,EAD3BC,KACEC,YAAeC,WAIRC,SAAQ,SAAAC,QACMC,IAAnBN,EAAKK,GAAyBL,EAAKK,GAAY,EAC9CL,EAAKK,IACZ,IAEAL,EAAU,MAEHA,CACT,GACA,CAAEO,IAAK,GACR,GACH,IAGF,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAQ,CACP3B,MAAOA,EACPC,YAAaA,EACb2B,IAAK1B,EACL2B,MAAOtB,EACPM,QAASA,IAETa,EAAAA,EAAAA,IAACI,EAAAA,EAAS,MACRJ,EAAAA,EAAAA,IAACK,EAAAA,EAAK,MACJL,EAAAA,EAAAA,IAACM,EAAAA,EAAY,CACXrB,iBAAkBA,EAClBI,iBAAkBA,EAClBkB,eA5Ca,SAACV,GACtBX,EAAYW,EACd,MA6CMG,EAAAA,EAAAA,IAACQ,EAAAA,EAAO,MACNR,EAAAA,EAAAA,IAACS,EAAAA,EAAQ,CACPxB,iBAAkBA,EAClByB,MAAOjC,MAMnB,C","sources":["webpack://kodooui/./src/pages/life.tsx"],"sourcesContent":["import React, { FunctionComponent, useMemo, useState } from \"react\";\nimport {graphql} from \"gatsby\";\nimport {PostListItemType} from \"../types/PostItem.types\";\nimport {IGatsbyImageData} from \"gatsby-plugin-image\";\nimport Template from \"components/Common/Template\";\nimport Aside from \"components/Common/Aside\";\nimport Content from \"components/Common/Content\";\nimport { TabTypes } from \"../constants\";\nimport CategoryList, { CategoryListProps } from \"components/Main/CategoryList\";\nimport PostList from \"components/Main/PostList\";\nimport Container from \"components/Main/Container\";\n\n\ntype LifePageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\n\nconst LifePage: FunctionComponent<LifePageProps> = function ({\n data: {\n   site: {\n     siteMetadata: { title, description, siteUrl, },\n   },\n   allMarkdownRemark: { edges },\n   file: {\n     childImageSharp: {\n       gatsbyImageData\n     },\n     publicURL,\n   }\n },\n}) {\n  const [selectedCategory, setCategory] = useState('All');\n  const changeCategory = (category: string) => {\n    setCategory(category);\n  }\n\n  const tabType = TabTypes.life;\n\n  const categoryEntities = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryEntities'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostListItemType\n        ) => {\n          categories.forEach(category => {\n            if (list[category] === undefined) list[category] = 1;\n            else list[category]++;\n          });\n\n          list['All']++;\n\n          return list;\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n      tabType={tabType}\n    >\n      <Container>\n        <Aside>\n          <CategoryList\n            selectedCategory={selectedCategory}\n            categoryEntities={categoryEntities}\n            changeCategory={changeCategory}\n          />\n        </Aside>\n        <Content>\n          <PostList\n            selectedCategory={selectedCategory}\n            posts={edges}\n          />\n        </Content>\n      </Container>\n    </Template>\n  )\n};\n\nexport default LifePage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      filter: {fields: {slug: {glob: \"/life/*\"}}},\n      sort: { order: DESC, fields: frontmatter___id }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`"],"names":["data","_ref$data$site$siteMe","site","siteMetadata","title","description","siteUrl","edges","allMarkdownRemark","_ref$data$file","file","publicURL","childImageSharp","gatsbyImageData","useState","selectedCategory","setCategory","tabType","TabTypes","categoryEntities","useMemo","reduce","list","node","frontmatter","categories","forEach","category","undefined","All","___EmotionJSX","Template","url","image","Container","Aside","CategoryList","changeCategory","Content","PostList","posts"],"sourceRoot":""}