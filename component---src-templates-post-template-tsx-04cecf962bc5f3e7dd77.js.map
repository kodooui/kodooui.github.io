{"version":3,"file":"component---src-templates-post-template-tsx-04cecf962bc5f3e7dd77.js","mappings":"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","sources":["webpack://kodooui/./src/components/Post/PostHeadInfo.tsx","webpack://kodooui/./src/components/Post/PostHead.tsx","webpack://kodooui/./src/components/Post/PostContent.tsx","webpack://kodooui/./src/components/Post/CommentWidget.tsx","webpack://kodooui/./src/templates/post-template.tsx"],"sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"gatsby\";\nimport { TabType } from \"../../types/Tab.types\";\nimport { TabTypes } from \"../../constants\";\n\nexport type PostHeadInfoProps = {\n  title: string\n  date: string\n  categories: string[]\n  tabType: TabType;\n}\n\nconst PostHeadInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 1440px;\n  height: 100%;\n  margin: 0 auto;\n  padding: 60px 40px;\n  color: #fff;\n  box-sizing: border-box;\n  \n  @media (max-width: 767px) {\n    max-width: none;\n    padding: 40px 30px;\n    letter-spacing: -0.5px;\n  }\n`\n\nconst PrevPageLink = styled(Link)`\n  display: grid;\n  place-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: #ffffff;\n  color: #000000;\n  font-size: 22px;\n  cursor: pointer;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n\n  @media (max-width: 767px) {\n    display: none;\n  }\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  margin: auto auto 0;\n  width: 100%;\n  max-width: 768px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 45px;\n  font-weight: 700;\n\n  @media (max-width: 767px) {\n    font-size: 36px;\n  }\n`\n\nconst PostData = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 24px auto 0;\n  padding: 0 5px;\n  width: 100%;\n  max-width: 768px;\n  font-size: 20px;\n  box-sizing: border-box;\n\n  @media (max-width: 767px) {\n    flex-direction: column;\n    align-items: flex-start;\n    margin-top: 15px;\n    padding: 0 3px;\n    font-size: 16px;\n    line-height: 25px;\n  }\n`\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n  tabType\n}) {\n\n  return (\n    <PostHeadInfoWrapper>\n      <PrevPageLink to={tabType === TabTypes.dev ? '/' : '/life'}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </PrevPageLink>\n      <Title>{title}</Title>\n      <PostData>\n        <span>{categories.join(' Â· ')}</span>\n        <time dateTime={date.replace(/\\./g, '-')}>{date}</time>\n      </PostData>\n    </PostHeadInfoWrapper>\n  )\n}\n\nexport default PostHeadInfo","import React, { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo'\n\ntype GatsbyImgProps = {\n  image: IGatsbyImageData\n  alt: string\n  className?: string\n}\n\ntype PostHeadProps = PostHeadInfoProps & {\n  thumbnail: IGatsbyImageData\n}\n\nconst PostHeadWrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  height: 520px;\n  \n  @media (max-width: 767px) {\n    height: 400px;\n  }\n`;\n\nconst BackgroundImage = styled(( props: GatsbyImgProps ) => (\n    <GatsbyImage {...props} style={{ position: 'absolute' }} />\n))`\n  z-index: -1;\n  width: 100%;\n  height: 520px;\n  filter: brightness(0.25);\n\n  @media (max-width: 767px) {\n    height: 400px;\n  }\n`;\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  categories,\n  thumbnail,\n  tabType,\n}) {\n    return (\n        <PostHeadWrapper>\n            <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\n            <PostHeadInfo title={title} date={date} categories={categories} tabType={tabType} />\n        </PostHeadWrapper>\n    )\n}\n\nexport default PostHead","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ninterface PostContentProps {\n  html: string\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n  padding: 100px 0;\n  word-break: break-all;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 18px;\n  font-weight: 400;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 600;\n    margin-bottom: 30px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 80px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 33px;\n  }\n\n  h2 {\n    font-size: 28px;\n  }\n\n  h3 {\n    font-size: 23px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 600;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 16px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 767px) {\n    width: 100%;\n    padding: 60px 30px;\n    line-height: 1.6;\n    font-size: 16px;\n    box-sizing: border-box;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n}\n\nexport default PostContent","import React, { createRef, useEffect, FunctionComponent } from 'react';\nimport styled from '@emotion/styled'\n\nconst src = 'https://utteranc.es/client.js';\nconst repo = 'kowoo0/kowoo0.github.io';\n\ntype UtterancesAttributesType = {\n  src: string\n  repo: string\n  'issue-term': string\n  label: string\n  theme: string\n  crossorigin: string\n  async: string\n};\n\nconst UtterancesWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n`\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    if (element.current === null) return;\n\n    const utterances: HTMLScriptElement = document.createElement('script');\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    }\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current.appendChild(utterances);\n  }, [])\n\n  return <UtterancesWrapper ref={element} />\n}\n\nexport default CommentWidget","import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport {graphql} from \"gatsby\";\nimport Template from \"components/Common/Template\";\nimport PostHead from \"components/Post/PostHead\";\nimport {PostFrontmatterType} from \"../types/PostItem.types\";\nimport PostContent from 'components/Post/PostContent'\nimport CommentWidget from 'components/Post/CommentWidget'\nimport { TabTypes } from \"../constants\";\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[]\n    }\n  }\n  location: {\n    href: string\n  }\n}\n\nexport type PostPageItemType = {\n  node: {\n    html: string\n    frontmatter: PostFrontmatterType\n  }\n}\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: {\n    href,\n  },\n}) => {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      }\n    }\n  } = edges[0];\n\n  const [tabType, setTabType] = useState(TabTypes.dev);\n\n  useEffect(() => {\n    if (location.href) {\n      setTabType(location.href.includes('dev') ? TabTypes.dev : TabTypes.life);\n    }\n  }, [])\n\n  return (\n    <Template\n      title={title}\n      description={summary}\n      image={publicURL}\n      url={href}\n      tabType={tabType}\n    >\n      <PostHead\n        title={title}\n        date={date}\n        categories={categories}\n        thumbnail={gatsbyImageData}\n        tabType={tabType}\n      />\n      <PostContent html={html} />\n      <CommentWidget />\n    </Template>\n  )\n}\n\nexport default PostTemplate\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;"],"names":["PostHeadInfoWrapper","PrevPageLink","_styled","Link","Title","PostData","title","date","categories","tabType","___EmotionJSX","to","TabTypes","FontAwesomeIcon","icon","faArrowLeft","join","dateTime","replace","PostHeadWrapper","BackgroundImage","props","GatsbyImage","style","position","thumbnail","image","alt","PostHeadInfo","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","UtterancesWrapper","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","edges","data","allMarkdownRemark","href","location","node","_edges$0$node$frontma","frontmatter","summary","_edges$0$node$frontma2","gatsbyImageData","childImageSharp","publicURL","useState","setTabType","includes","Template","description","url","PostHead","PostContent","CommentWidget"],"sourceRoot":""}